@model IEnumerable<BeautySpaceDomain.Model.Reservation>

@{
    ViewData["Title"] = "Бронювання";
    DbbeautySpaceContext dbbeautySpaceContext = new DbbeautySpaceContext();
}

<div class="content">
    <h1>Створені бронювання</h1>
    <form id="deleteForm" asp-action="DeleteMultiple" method="post">
        <table class="table">
        <thead>
            <tr>
                <th>
                    <input type="checkbox" id="selectAll" onclick="toggleCheckboxes(this)" />
                </th>
                <th class="table-name">
                    @Html.DisplayNameFor(model => model.TimeSlot.Date)
                </th>
                <th class="table-name">
                    Ім'я клієнта
                </th>
                <th class="table-name">
                    Прізвище клієнта
                </th>
                <th class="table-name">
                    Мобільний номер клієнта
                </th>
                <th class="table-name">
                    @Html.DisplayNameFor(model => model.TimeSlot.StartTime)
                </th>
                <th class="table-name">
                    Майстер
                </th>
                <th class="table-name">
                    Послуга
                </th>
                <th>
                    <a class="btn-new" asp-action="CreateReservation">Створити</a>
                </th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
            {
                <tr>
                    <td>
                        <input type="checkbox" name="selectedReservations" value="@item.Id" />
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.TimeSlot.Date)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Client.FirstName)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Client.LastName)
                    </td>
                    <td>
                        @if (!string.IsNullOrEmpty(item.Client.PhoneNumber))
                        {
                            <text>(@item.Client.PhoneNumber.Substring(3, 3)) @item.Client.PhoneNumber.Substring(6, 3)-@item.Client.PhoneNumber.Substring(9, 2)-@item.Client.PhoneNumber.Substring(11)</text>
                        }
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.TimeSlot.StartTime)
                    </td>

                    <td>
                        @{
                            var employeeService = dbbeautySpaceContext.EmployeeServices.FirstOrDefault(es => es.Id == item.TimeSlot.EmployeeServiceId);
                            var employee = dbbeautySpaceContext.Employees.FirstOrDefault(e => e.Id == employeeService.EmployeeId);
                        }
                        @employee.FirstName @employee.LastName
                    </td>
                    <td>
                        @{
                            var service = dbbeautySpaceContext.Services.FirstOrDefault(s => s.Id == employeeService.ServiceId);
                        }
                        @service.Name
                    </td>
                    <td>
                        <div class="actions">
                            @if (Accessibility.AllExceptUser(User))
                            {
                                <a asp-action="Edit" asp-route-id="@item.Id">Редагувати</a>
                                <a asp-action="Delete" asp-route-id="@item.Id">Видалити</a>
                            }
                            <a asp-action="Details" asp-route-id="@item.Id">Деталі</a>
                        </div>
                    </td>
                </tr>
            }
        </tbody>
    </table>
        <button type="button" style="margin-top: 25px;" class="btn" onclick="confirmDelete()">Видалити обрані бронювання</button>
    </form>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <script>
        function toggleCheckboxes(source) {
            var checkboxes = document.querySelectorAll('input[name="selectedReservations"]');
            for (var i = 0; i < checkboxes.length; i++) {
                checkboxes[i].checked = source.checked;
            }
        }
    </script>
    <script>
        function confirmDelete() {
            Swal.fire({
                title: 'Підтвердження видалення',
                text: "Ви дійсно хочете видалити вибрані бронювання?",
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#ab0c24',
                cancelButtonColor: '#6d6d6d',
                confirmButtonText: 'Так, видалити',
                cancelButtonText: 'Ні, скасувати'
            }).then((result) => {
                if (result.isConfirmed) {
                    document.getElementById('deleteForm').submit();
                }
            });
        }
    </script>


}