@model BeautySpaceInfrastructure.ViewModel.ReservationViewModel
<link href="https://cdnjs.cloudflare.com/ajax/libs/select2/4.0.13/css/select2.min.css" rel="stylesheet" />


@{
    ViewData["Title"] = "Створення бронювання";
}

 <div class="content">
        <form asp-action="Create">
    <div asp-validation-summary="ModelOnly" class="text-danger"></div>
        <div class="form-group">
            <label asp-for="ClientId" class="control-label">Клієнт</label>
            <select asp-for="ClientId" class="form-control" id="ClientId" name="ClientId"></select>
            <span id="clientIdError" class="text-danger" style="display: @(ViewData.ModelState.ContainsKey("ClientId") ? "inline" : "none")">
                @Html.ValidationMessageFor(model => model.ClientId, "", new { @class = "text-danger" })
            </span>
        </div>


    <div class="form-group">
        <label asp-for="CategoryId" class="control-label">Категорія</label>
        <select id="CategoryId" class="form-control" asp-for="CategoryId" asp-items="ViewBag.CategoryId">
            <option value="" disabled selected>Оберіть категорію</option>
        </select>
    </div>

    <div class="form-group">
        <label asp-for="ServiceId" class="control-label">Послуга</label>
        <select id="ServiceId" class="form-control" asp-for="ServiceId">
            <option value="" disabled selected>Спочатку оберіть категорію</option>
        </select>

    </div>

    <div class="form-group">
        <label asp-for="EmployeeServiceId" class="control-label">Працівник</label>
        <select id="EmployeeServiceId" class="form-control" asp-for="EmployeeServiceId" asp-items="ViewBag.EmployeeServiceId">
            <option value="" disabled selected>Спочатку оберіть послугу</option>
        </select>
    </div>



    @* дата *@
        <div class="form-group">
            <label asp-for="TimeSlotId" class="control-label">Дата та час</label>
            <select id="TimeSlot" class="form-control" asp-for="TimeSlotId" asp-items="ViewBag.TimeSlotId">
                <option value="" disabled selected>Спочатку оберіть майстра</option>
            </select>
        </div>


    <div class="edit-create-or-back">
        <input type="submit" value="Створити" class="btn btn-primary" />
        <a class="btn-back-new" asp-action="Index">Скасувати</a>
    </div>

    </form>

 </div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
    <script src="https://cdnjs.cloudflare.com/ajax/libs/select2/4.0.13/js/select2.min.js"></script>
    <script>
        $(document).ready(function () {
            $('#ClientId').select2({
                placeholder: 'Виберіть клієнта',
                language: {
                    noResults: function () {
                        return "Відповідних результатів не знайдено";
                    },
                    searching: function () {
                        return "Пошук…";
                    }
                },
                ajax: {
                    url: '/Reservations/SearchClients',
                    dataType: 'json',
                    delay: 25,
                    processResults: function (data) {
                        return {
                            results: data
                        };
                    },
                    cache: true
                },
                minimumInputLength: 0 // Мінімальна довжина введеного тексту для запуску пошуку
            });
        });
    </script>

    <script>
        $(document).ready(function () {
            // Функція для встановлення стану ServiceId
            function setServiceIdState(disabled) {
                $('#ServiceId').prop('disabled', disabled);
            }

            // Функція для встановлення стану EmployeeServiceId
            function setEmployeeServiceIdState(disabled) {
                $('#EmployeeServiceId').prop('disabled', disabled);
            }

            // Функція для встановлення стану TimeSlot
            function setTimeSlotState(disabled) {
                $('#TimeSlot').prop('disabled', disabled);
            }

            // Початковий стан ServiceId, EmployeeServiceId та TimeSlot
            setServiceIdState(true);
            setEmployeeServiceIdState(true);
            setTimeSlotState(true);

            // При зміні значення категорії
            async function fetchServices(categoryId) {
                const response = await $.ajax({
                    url: '/Services/GetServicesByCategory',
                    type: 'GET',
                    data: { categoryId: categoryId }
                });
                return response;
            }

            function createOption(value, text, disabled = false, selected = false) {
                return $('<option>', {
                    value: value,
                    text: text,
                    disabled: disabled,
                    selected: selected
                });
            }

            function populateServices(services) {
                const serviceSelect = $('#ServiceId');
                serviceSelect.empty();

                if (services.length === 0) {
                    serviceSelect.append(createOption('', 'Список послуг порожній', true, true));
                } else {
                    serviceSelect.append(createOption('', 'Оберіть послугу', true, true));
                    services.forEach(item => {
                        serviceSelect.append(createOption(item.value, item.text));
                    });
                }
            }

            $('#CategoryId').change(async function () {
                const categoryId = $(this).val();
                if (categoryId) {
                    const services = await fetchServices(categoryId);
                    populateServices(services);

                    setServiceIdState(false);
                    setEmployeeServiceIdState(true);
                    setTimeSlotState(true);

                    $('#EmployeeServiceId').empty().append(createOption('', 'Спочатку оберіть послугу', true, true));
                    $('#TimeSlot').empty().append(createOption('', 'Спочатку оберіть майстра', true, true));
                } else {
                    setServiceIdState(true);
                    setEmployeeServiceIdState(true);
                    setTimeSlotState(true);
                }
            });


            // При зміні ServiceId
            async function fetchEmployees(serviceId) {
                const response = await $.ajax({
                    url: '/TimeSlots/GetEmployeesByServiceId',
                    type: 'GET',
                    data: { serviceId: serviceId }
                });
                return response;
            }

            function populateEmployees(employees) {
                const employeeSelect = $('#EmployeeServiceId');
                employeeSelect.empty();

                if (employees.length === 0) {
                    employeeSelect.append(createOption('', 'Список працівників порожній', true, true));
                } else {
                    employeeSelect.append(createOption('', 'Оберіть працівника', true, true));
                    employees.forEach(item => {
                        employeeSelect.append(createOption(item.value, item.text));
                    });
                }
            }

            $('#ServiceId').change(async function () {
                const serviceId = $(this).val();
                if (serviceId) {
                    const employees = await fetchEmployees(serviceId);
                    populateEmployees(employees);

                    setEmployeeServiceIdState(false);
                    setTimeSlotState(true);

                    $('#TimeSlot').empty().append(createOption('', 'Спочатку оберіть майстра', true, true));
                } else {
                    setEmployeeServiceIdState(true);
                    setTimeSlotState(true);
                }
            });

            async function fetchTimeSlots(employeeServiceId, serviceId) {
                const response = await $.ajax({
                    url: '/TimeSlots/GetTimeSlotsByEmployeeServiceId',
                    type: 'GET',
                    data: { employeeId: employeeServiceId, serviceId: serviceId }
                });
                return response;
            }

            function populateTimeSlots(timeSlots) {
                const timeSlotSelect = $('#TimeSlot');
                timeSlotSelect.empty();

                if (timeSlots.length === 0) {
                    timeSlotSelect.append(createOption('', 'Бронювання у цього працівника для цієї послуги наразі недоступні', true, true));
                } else {
                    timeSlotSelect.append(createOption('', 'Оберіть час', true, true));
                    timeSlots.forEach(item => {
                        timeSlotSelect.append(createOption(item.value, item.text));
                    });
                }
            }

            $('#EmployeeServiceId').change(async function () {
                const employeeServiceId = $(this).val();
                const serviceId = $('#ServiceId').val();
                if (employeeServiceId && serviceId) {
                    const timeSlots = await fetchTimeSlots(employeeServiceId, serviceId);
                    populateTimeSlots(timeSlots);

                    setTimeSlotState(false);
                } else {
                    setTimeSlotState(true);
                }
            });



        });

    </script>
}